当类之间存在存在层次结构，并且类之间是通过继承关联时，就会用到多态。
多态意味着调用成员函数时，会根据调用函数的对象的类型来执行不同的函数。
多态：我们可以在指向基类的指针或引用的地方使用派生类类型
C++是通过虚函数的动态绑定特性来支持多态的
我们可以通过一个单独的函数来调用多个类型中的某个函数

静态链接：函数调用在程序执行前就准备好了
虚函数：是在基类中使用virtual声明的函数。在派生类中重新定义基类中定义的虚函数时，会告诉编译器不要静态链接到该函数。
动态链接/绑定：可以根据对象类型来选择调用的函数
纯虚函数，在基类中不能对虚函数给出有意义的实现，有纯虚函数的类称为抽象类，由于抽象类还有许多不完全的地方，不能定义抽象类的对象。

动态绑定：虚函数在运行时，通过引用或指针来调用这个函数
静态绑定：通过一个对象来调用一个虚函数，可以在编译时知道这个对象的准确类型

重写：对基类的函数进行重新定义
